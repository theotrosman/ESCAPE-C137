@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>INICIO // ESCAPE ROOM</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://fonts.googleapis.com/css2?family=VT323&display=swap" rel="stylesheet">
  <style>
    :root {
      --bg: black;
      --fg: #0f0;
      --glitch1: #ff00c8;
      --glitch2: #00ffff;
      --err: red;
      --flash: white;
    }

    body {
      margin: 0;
      background: var(--bg);
      color: var(--fg);
      font-family: 'VT323', monospace;
      overflow: hidden;
      transition: background 0.3s;
    }

    #intro-video {
      position: absolute;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      object-fit: cover;
      z-index: 1;
    }

    #overlay {
      position: absolute;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      z-index: 2;
      background: rgba(0,0,0,0.9);
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      opacity: 0;
      animation: fadeIn 4s 4s forwards;
    }

    .console-text {
      font-size: 24px;
      white-space: pre;
      color: var(--fg);
      text-shadow: 0 0 2px #0f0;
      animation: flicker 0.15s infinite alternate, colorShift 0.5s infinite alternate;
    }

    .ascii-button {
      background: black;
      border: 2px solid var(--fg);
      color: var(--fg);
      padding: 12px 24px;
      font-size: 20px;
      margin-top: 20px;
      cursor: pointer;
      font-family: 'VT323', monospace;
      text-transform: uppercase;
      opacity: 0;
      transform: scale(0.8);
      animation: none;
      transition: all 0.5s ease;
    }

    .ascii-button.show {
      opacity: 1;
      transform: scale(1);
      animation: glitch 1s infinite;
    }

    .ascii-button:hover {
      border-color: var(--glitch1);
      color: var(--glitch1);
    }

    @@keyframes fadeIn {
      to { opacity: 1; }
    }

    @@keyframes glitch {
      0% { text-shadow: 2px 0 var(--glitch1), -2px 0 var(--glitch2); }
      50% { text-shadow: -2px 0 var(--glitch2), 2px 0 var(--glitch1); }
      100% { text-shadow: 2px 0 var(--glitch1), -2px 0 var(--glitch2); }
    }

    @@keyframes flicker {
      0% { opacity: 1; }
      100% { opacity: 0.85; }
    }

    @@keyframes colorShift {
      0% { color: #0f0; }
      100% { color: #fff; }
    }

    @@keyframes explosion {
      0% { transform: scale(1); filter: brightness(1); }
      50% { transform: scale(1.5); filter: brightness(3); }
      100% { transform: scale(1); filter: brightness(1); }
    }

    .explosive {
      animation: explosion 0.7s ease;
    }

    /* Estilos para el botón de logros */
    #btn-logros {
      border-color: #ffd700;
      color: #ffd700;
      text-shadow: 0 0 5px #ffd700;
      position: relative;
      overflow: hidden;
    }

    #btn-logros::before {
      content: '';
      position: absolute;
      top: -100%;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        transparent,
        rgba(255, 215, 0, 0.2),
        transparent
      );
      animation: trophyGlow 2s infinite;
    }

    #btn-logros:hover {
      border-color: #fff;
      color: #fff;
      box-shadow: 
        0 0 20px rgba(255, 215, 0, 0.4),
        inset 0 0 10px rgba(255, 215, 0, 0.3);
    }

    @@keyframes trophyGlow {
      0% { transform: translateY(-100%) rotate(45deg); }
      100% { transform: translateY(200%) rotate(45deg); }
    }

    .ascii-button {
      margin: 15px;
      position: relative;
      transition: all 0.3s ease;
    }

    .ascii-button:hover {
      transform: scale(1.1);
    }

    .ascii-button::after {
      content: '';
      position: absolute;
      inset: -2px;
      background: linear-gradient(45deg,
        transparent,
        rgba(255,255,255,0.1),
        transparent
      );
      opacity: 0;
      transition: opacity 0.3s;
    }

    .ascii-button:hover::after {
      opacity: 1;
    }

    /* Estilos para el botón de equipo */
    #btn-equipo {
      border-color: #00ffff;
      color: #00ffff;
      text-shadow: 0 0 5px #00ffff;
      position: relative;
      overflow: hidden;
    }

    #btn-equipo::before {
      content: '';
      position: absolute;
      top: -100%;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        transparent,
        rgba(0, 255, 255, 0.2),
        transparent
      );
      animation: teamGlow 2s infinite;
    }

    #btn-equipo:hover {
      border-color: #fff;
      color: #fff;
      box-shadow: 
        0 0 20px rgba(0, 255, 255, 0.4),
        inset 0 0 10px rgba(0, 255, 255, 0.3);
    }

    @@keyframes teamGlow {
      0% { transform: translateY(-100%) rotate(45deg); }
      100% { transform: translateY(200%) rotate(45deg); }
    }
  </style>
</head>
<body>
  <video id="intro-video" autoplay muted playsinline>
    <source src="/img/adultswimintro.mp4" type="video/mp4">
  </video>
  <audio id="intro-audio">
    <source src="/img/adultswimintro.mp3" type="audio/mp3">
  </audio>

  <div id="overlay">
    <div class="console-text" id="typewriter"></div>
    <button class="ascii-button" id="btn-juego" onclick="entrarJuego()">> ACCEDER AL CÓDIGO FUENTE <</button>
    <button class="ascii-button" id="btn-logros" onclick="verLogros()">> SALA DE TROFEOS <</button>
    <button class="ascii-button tutorial-button" id="btn-tuto" onclick="verTutorial()">> VER TUTORIAL <</button>
    <button class="ascii-button" id="btn-equipo" onclick="verEquipo()">> EQUIPO <</button>
  </div>

  <script src="/js/endings.js"></script>
  <script>
  // Justo antes de arrancar la intro:
if (localStorage.getItem('skipIntro') === '1') {
  localStorage.removeItem('skipIntro'); // así no se repite nunca
  // Mostramos el final/post-intro y los botones directamente:
  document.getElementById("intro-video").style.display = "none";
  document.getElementById("overlay").style.opacity = "1";
  document.getElementById("overlay").style.animation = "none";
  document.getElementById("typewriter").style.display = "none";
  // Mostrá los botones y quitá el efecto explosivo
  ["btn-juego", "btn-tuto", "btn-logros", "btn-equipo"].forEach(id => {
    const btn = document.getElementById(id);
    btn.classList.add("show");
    btn.classList.remove("explosive");
  });
  // Si usás audio, podés frenarlo o poner uno especial
} else {
  // ...arranca el typeLine/intro normalmente...
  setTimeout(() => {
    document.getElementById("intro-video").pause();
    typeLine();
  }, 6000);
}

const audio = document.getElementById("intro-audio");
window.addEventListener('load', () => {
  audio.volume = 1;
  audio.play().catch(e => console.warn("Reproducción bloqueada por el navegador", e));
});

const lines = [
  ">>> INICIANDO CONEXIÓN...",
  ">>> TRANSMISIÓN DESDE DIMENSIÓN 137...",
  ">>> RICK Y MORTY HAN SIDO CAPTURADOS EN UN BUCLE DE CÓDIGO MVC...",
  ">>> INTENTARON HACKEAR EL FRAMEWORK PARA ESCAPAR DEL MULTIVERSO...",
  ">>> PERO EL SISTEMA LOS DETECTÓ Y LOS ENJAULÓ ENTRE CONTROLADORES Y VISTAS...",
  ">>> CADA SALA ES UNA CAPA DIFERENTE DE LA REALIDAD...",
  ">>> SINTONIZANDO LÍNEAS DE CÓDIGO...",
  ">>> ERROR FATAL: INYECCIÓN DE CÓDIGO DETECTADA",
  ">>> [SISTEMA REACTIVÁNDOSE...]",
  ">>> ACCESO PARCIAL CONCEDIDO.\n"
];

let currentLine = 0;
const typewriter = document.getElementById("typewriter");
const body = document.body;

function flashBackground() {
  body.style.background = 'white';
  setTimeout(() => { body.style.background = 'black'; }, 150);
}

function scrambleWrite(text, color, onDone, glitch = false) {
  let revealed = '';
  let i = 0;
  const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!#$%^&*()_+-=[]{};:\'",.<>?/\\|'.split('');
  function scrambleStep() {
    if (i <= text.length) {
      // Armá el texto: lo ya revelado + el resto scrambleado
      let visible = text.slice(0, i);
      let scrambled = '';
      for (let j = i; j < text.length; j++) {
        if (text[j] === ' ' || text[j] === '>' || text[j] === ':') {
          scrambled += text[j]; // que los espacios y símbolos queden fijos para que no sea ilegible
        } else {
          scrambled += chars[Math.floor(Math.random() * chars.length)];
        }
      }
      let span = `<span${color ? ` style='color:${color}'` : ''}${glitch ? " class='glitch'" : ""}>${visible}${scrambled}</span><br>`;
      // Escribí la línea (eliminando la versión previa, para que no se acumule)
      typewriter.innerHTML = typewriter.innerHTML.replace(/(<span.*?>.*?<\/span><br>)*$/, '') + span;
      if (i === text.length) {
        if (onDone) onDone();
      } else {
        i++;
        setTimeout(scrambleStep, 90 + Math.random() * 90);
      }
    }
  }
  scrambleStep();
}


function typeLine() {
  if (currentLine < lines.length) {
    let line = lines[currentLine];
    // ¿Es la línea del error?
    if (line.includes("ERROR FATAL")) {
      scrambleWrite(line, 'var(--err)', () => {
        flashBackground();
        currentLine++;
        setTimeout(typeLine, 900);
      }, true);
    }
    // ¿Es la línea de acceso concedido? (scramble + glitch sutil)
    else if (line.includes("ACCESO PARCIAL")) {
      scrambleWrite(line, 'var(--fg)', () => {
        currentLine++;
        setTimeout(typeLine, 900);
      }, true);
    }
    // Resto de líneas normales (scramble sin glitch)
    else {
      scrambleWrite(line, 'var(--fg)', () => {
        currentLine++;
        setTimeout(typeLine, 250);
      });
    }
  } else {
    triggerEpicReveal();
  }
}

function triggerEpicReveal() {
  const btn1 = document.getElementById("btn-juego");
  const btn2 = document.getElementById("btn-tuto");
  const btn3 = document.getElementById("btn-logros");
  const btn4 = document.getElementById("btn-equipo");
  btn1.classList.add("show", "explosive");
  btn2.classList.add("show", "explosive");
  btn3.classList.add("show", "explosive");
  btn4.classList.add("show", "explosive");
  setTimeout(() => {
    btn1.classList.remove("explosive");
    btn2.classList.remove("explosive");
    btn3.classList.remove("explosive");
    btn4.classList.remove("explosive");
  }, 700);
}

setTimeout(() => {
  document.getElementById("intro-video").pause();
  typeLine();
}, 6000);

function entrarJuego() {
  window.location.href = "/Home/Room1";
}
function verTutorial() {
  window.location.href = "/Home/Tutorial";
}
function verLogros() {
  window.location.href = '/Home/Logros';
}
function verEquipo() {
  window.location.href = '/Home/Equipo';
}
</script>

</body>
</html>