@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
      <title>¿Estás seguro de querer entrar?</title>
       <link rel="icon" type="image/png" href="~/img/morty-icon.png" />

  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://fonts.googleapis.com/css2?family=VT323&display=swap" rel="stylesheet">
  <style>
    :root {
      --bg: black;
      --fg: #0f0;
      --glitch1: #ff00c8;
      --glitch2: #00ffff;
      --err: red;
      --flash: white;
    }

    body {
      margin: 0;
      background: var(--bg);
      color: var(--fg);
      font-family: 'VT323', monospace;
      overflow: hidden;
      transition: background 0.3s;
    }

    #intro-video {
      position: absolute;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      object-fit: cover;
      z-index: 1;
    }

    #intro-primeriza {
      position: absolute;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      object-fit: cover;
      z-index: 1;
    }

    #overlay {
      position: absolute;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      z-index: 2;
      /* background: rgba(0,0,0,0.9); */
      background: transparent;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      opacity: 1;
    }

    .console-text {
      font-size: 24px;
      white-space: pre;
      color: var(--fg);
      text-shadow: 0 0 2px #0f0;
      animation: flicker 0.15s infinite alternate, colorShift 0.5s infinite alternate;
    }

    .ascii-button {
      background: black;
      border: 2px solid #00ff00;
      color: #00ff00;
      padding: 12px 24px;
      font-size: 20px;
      margin: 12px 0;
      cursor: pointer;
      font-family: 'VT323', monospace;
      text-transform: uppercase;
      opacity: 0;
      transform: scale(0.8);
      animation: none;
      transition: all 0.5s ease;
      width: 340px;
      height: 56px;
      display: flex;
      align-items: center;
      justify-content: center;
      box-sizing: border-box;
    }

    .ascii-button.show {
      opacity: 1;
      transform: scale(1);
      animation: glitch 1s infinite;
    }

    .ascii-button:hover {
      border-color: #fff;
      color: #fff;
    }

    /* --- BOTÓN DE PLAY INICIO --- */
    #play-intro-btn {
      position: fixed;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      background: black;
      z-index: 10000;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: opacity 0.5s;
    }
    #play-intro-btn .play-circle {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      background: rgba(255,255,255,0.12);
      border: 4px solid white;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      box-shadow: 0 0 32px 0 #fff8;
      transition: background 0.2s, box-shadow 0.2s;
    }
    #play-intro-btn .play-circle:hover {
      background: rgba(255,255,255,0.25);
      box-shadow: 0 0 48px 0 #fff;
    }
    #play-intro-btn .play-triangle {
      width: 0;
      height: 0;
      border-left: 48px solid white;
      border-top: 32px solid transparent;
      border-bottom: 32px solid transparent;
      margin-left: 10px;
    }
    /* --- FIN BOTÓN DE PLAY --- */

    @@keyframes glitch {
      0% { text-shadow: 2px 0 var(--glitch1), -2px 0 var(--glitch2); }
      50% { text-shadow: -2px 0 var(--glitch2), 2px 0 var(--glitch1); }
      100% { text-shadow: 2px 0 var(--glitch1), -2px 0 var(--glitch2); }
    }

    @@keyframes flicker {
      0% { opacity: 1; }
      100% { opacity: 0.85; }
    }

    @@keyframes colorShift {
      0% { color: #0f0; }
      100% { color: #fff; }
    }

    @@keyframes explosion {
      0% { transform: scale(1); filter: brightness(1); }
      50% { transform: scale(1.5); filter: brightness(3); }
      100% { transform: scale(1); filter: brightness(1); }
    }

    .explosive {
      animation: explosion 0.7s ease;
    }

    /* Unifica el estilo de todos los botones, elimina color dorado y celeste */
    #btn-logros, #btn-equipo {
      border-color: #00ff00;
      color: #00ff00;
      text-shadow: 0 0 5px #00ff00;
      box-shadow: none;
    }
    #btn-logros::before, #btn-equipo::before {
      display: none;
    }
    #btn-logros:hover, #btn-equipo:hover {
      border-color: #fff;
      color: #fff;
      box-shadow: none;
    }
    #btn-logros {
      position: relative;
      overflow: hidden;
    }
    #btn-equipo {
      position: relative;
      overflow: hidden;
    }

    .ascii-button {
      margin: 15px;
      position: relative;
      transition: all 0.3s ease;
    }

    .ascii-button:hover {
      transform: scale(1.1);
    }

    .ascii-button::after {
      content: '';
      position: absolute;
      inset: -2px;
      background: linear-gradient(45deg,
        transparent,
        rgba(255,255,255,0.1),
        transparent
      );
      opacity: 0;
      transition: opacity 0.3s;
    }

    .ascii-button:hover::after {
      opacity: 1;
    }
  </style>
</head>
<body>
  <!-- Video de fondo permanente (solo visible cuando overlay está activo) -->
  <video id="background-rick" autoplay loop muted playsinline style="opacity:0; visibility:hidden; transition:opacity 1.5s; position:fixed; top:0; left:0; width:100vw; height:100vh; object-fit:cover; z-index:0; pointer-events:none;">
    <source src="/img/rick-1.mp4" type="video/mp4">
  </video>

  <!-- Botón de play para iniciar la intro -->
  <div id="play-intro-btn">
    <div class="play-circle" onclick="startIntro()">
      <div class="play-triangle"></div>
    </div>
  </div>

  <!-- Video de introducción principal -->
  <video id="intro-primeriza" autoplay muted playsinline style="display:none;">
    <source src="/img/introprimeriza.mp4" type="video/mp4">
  </video>
  
  <!-- Audio del video de introducción -->
  <audio id="intro-primeriza-audio">
    <source src="/img/introprimeriza.mp4" type="audio/mp4">
  </audio>
  
  <!-- Video de Adult Swim (inicialmente oculto) -->
  <video id="intro-video" autoplay muted playsinline style="display: none;">
    <source src="/img/adultswimintro.mp4" type="video/mp4">
  </video>
  
  <!-- Audio del video de Adult Swim -->
  <audio id="intro-audio">
    <source src="/img/adultswimintro.mp3" type="audio/mp3">
  </audio>
  
  <!-- Otros audios -->
  <audio id="typewriter-audio">
    <source src="/img/sfxtype.mp3" type="audio/mp3">
  </audio>
  <audio id="bg-fightclub" loop>
    <source src="/img/fightclub.mp3" type="audio/mp3">
  </audio>
  <div id="overlay">
    <div class="console-text" id="typewriter"></div>
    <button class="ascii-button" id="btn-juego" onclick="entrarJuego()">> ACCEDER AL CÓDIGO FUENTE <</button>
    <button class="ascii-button" id="btn-logros" onclick="verLogros()">> SALA DE TROFEOS <</button>
    <button class="ascii-button tutorial-button" id="btn-tuto" onclick="verTutorial()">> VER TUTORIAL <</button>
    <button class="ascii-button" id="btn-equipo" onclick="verEquipo()">> EQUIPO <</button>
  </div>

  <script src="/js/endings.js"></script>
  <script>
  // Variables para manejar la secuencia de videos
  let introPrimerizaVideo = document.getElementById("intro-primeriza");
  let introPrimerizaAudio = document.getElementById("intro-primeriza-audio");
  let introVideo = document.getElementById("intro-video");
  let introAudio = document.getElementById("intro-audio");
  
  // Botón de play para iniciar la intro
  function startIntro() {
    document.getElementById('play-intro-btn').style.opacity = 0;
    setTimeout(()=>{
      document.getElementById('play-intro-btn').style.display = 'none';
      introPrimerizaVideo.style.display = "block";
      // Ocultar el video de fondo por si quedó visible
      const bgRick = document.getElementById('background-rick');
      bgRick.style.opacity = 0;
      bgRick.style.visibility = 'hidden';
      startVideoSequence();
    }, 400);
  }

  // Justo antes de arrancar la intro:
  if (localStorage.getItem('skipIntro') === '1') {
    localStorage.removeItem('skipIntro'); // así no se repite nunca
    // Mostramos el final/post-intro y los botones directamente:
    introPrimerizaVideo.style.display = "none";
    introVideo.style.display = "none";
    document.getElementById("overlay").style.opacity = "1";
    document.getElementById("overlay").style.animation = "none";
    document.getElementById("typewriter").style.display = "none";
    // Mostrá los botones y quitá el efecto explosivo
    ["btn-juego", "btn-tuto", "btn-logros", "btn-equipo"].forEach(id => {
      const btn = document.getElementById(id);
      btn.classList.add("show");
      btn.classList.remove("explosive");
    });
    // Si usás audio, podés frenarlo o poner uno especial
    document.getElementById('play-intro-btn').style.display = 'none';
    // Mostrar el video de fondo
    const bgRick = document.getElementById('background-rick');
    bgRick.style.visibility = 'visible';
    bgRick.style.opacity = 1;
    try { bgRick.currentTime = 0; bgRick.play(); } catch(e){}
  } else if (!window._skipIntroProcessed) {
    // Mostrar el botón de play y esperar a que el usuario lo toque
    introPrimerizaVideo.style.display = "none";
    document.getElementById('play-intro-btn').style.display = 'flex';
    document.getElementById('play-intro-btn').style.opacity = 1;
    // El video y la secuencia arrancan solo cuando se toca el botón
    // Ocultar el video de fondo
    const bgRick = document.getElementById('background-rick');
    bgRick.style.opacity = 0;
    bgRick.style.visibility = 'hidden';
  }
  window._skipIntroProcessed = true;

  function startVideoSequence() {
    // Reproducir el primer video con sonido
    introPrimerizaAudio.volume = 1;
    introPrimerizaAudio.play().catch(e => console.warn("Audio bloqueado por el navegador", e));
    // Esperar a que termine el primer video antes de cambiar al segundo
    introPrimerizaVideo.addEventListener('ended', function() {
      introPrimerizaVideo.style.display = "none";
      introPrimerizaAudio.pause();
      introVideo.style.display = "block";
      // Reproducir el audio del video de Adult Swim
      introAudio.volume = 1;
      introAudio.play().catch(e => console.warn("Audio bloqueado por el navegador", e));
      // Cuando termina el video de Adult Swim, mostrar overlay y fondo
      introVideo.onended = function() {
        introVideo.pause();
        introVideo.style.display = 'none';
        typeLine();
        // Fade-in del video de fondo solo después de ambos videos
        const bgRick = document.getElementById('background-rick');
        setTimeout(() => {
          bgRick.style.visibility = 'visible';
          bgRick.style.opacity = 1;
        }, 200);
      };
      // Si el video de Adult Swim no tiene evento ended, fallback a los 6 segundos
      setTimeout(() => {
        if (!introVideo.ended) {
          introVideo.pause();
          introVideo.style.display = 'none';
          typeLine();
          const bgRick = document.getElementById('background-rick');
          setTimeout(() => {
            bgRick.style.visibility = 'visible';
            bgRick.style.opacity = 1;
          }, 200);
        }
      }, 6000);
    }, { once: true });
  }

  const audio = document.getElementById("intro-audio");
  window.addEventListener('load', () => {
    // Solo oculta el fondo si NO venís de skipIntro
    if (!window._skipIntroProcessed) {
      const bgRick = document.getElementById('background-rick');
      bgRick.style.opacity = 0;
      bgRick.style.visibility = 'hidden';
    }
  });

  const lines = [
  ""
  ];

  let currentLine = 0;
  const typewriter = document.getElementById("typewriter");
  const body = document.body;

  function flashBackground() {
    body.style.background = 'white';
    setTimeout(() => { body.style.background = 'black'; }, 150);
  }

  function scrambleWrite(text, color, onDone, glitch = false) {
    let revealed = '';
    let i = 0;
    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!#$%^&*()_+-=[]{};:\'",.<>?/\\|'.split('');
    function scrambleStep() {
      if (i <= text.length) {
        // Armá el texto: lo ya revelado + el resto scrambleado
        let visible = text.slice(0, i);
        let scrambled = '';
        for (let j = i; j < text.length; j++) {
          if (text[j] === ' ' || text[j] === '>' || text[j] === ':') {
            scrambled += text[j]; // que los espacios y símbolos queden fijos para que no sea ilegible
          } else {
            scrambled += chars[Math.floor(Math.random() * chars.length)];
          }
        }
        let span = `<span${color ? ` style='color:${color}'` : ''}${glitch ? " class='glitch'" : ""}>${visible}${scrambled}</span><br>`;
        // Escribí la línea (eliminando la versión previa, para que no se acumule)
        typewriter.innerHTML = typewriter.innerHTML.replace(/(<span.*?>.*?<\/span><br>)*/, '') + span;
        if (i === text.length) {
          if (onDone) onDone();
        } else {
          i++;
          setTimeout(scrambleStep, 90 + Math.random() * 90);
        }
      }
    }
    scrambleStep();
  }

  let typeAudio = document.getElementById("typewriter-audio");
  let typeAudioPlaying = false;

  function startTypeAudio() {
    if (!typeAudio) return;
    typeAudio.loop = true;
    typeAudio.currentTime = 0;
    typeAudio.volume = 0.7;
    // Si ya está sonando, no la dupliques
    if (!typeAudioPlaying) {
      typeAudio.play().catch(() => {});
      typeAudioPlaying = true;
    }
  }
  function stopTypeAudio() {
    if (!typeAudio) return;
    typeAudio.pause();
    typeAudio.currentTime = 0;
    typeAudioPlaying = false;
  }
  const bgAudio = document.getElementById('bg-fightclub');
  bgAudio.volume = 0.70; // O el volumen que prefieras
  let bgAudioStarted = false; // Para asegurarse que solo arranca una vez

  function typeLine() {
    // Arranca el audio de tipeo y el de fondo solo la primera vez
    if (currentLine === 0) {
      startTypeAudio();
      if (!bgAudioStarted) {
        bgAudio.currentTime = 0;
        bgAudio.play().catch(()=>{});
        bgAudioStarted = true;
      }
    }

    if (currentLine < lines.length) {
      let line = lines[currentLine];
      if (line.includes("ERROR FATAL")) {
        scrambleWrite(line, 'var(--err)', () => {
          flashBackground();
          currentLine++;
          setTimeout(typeLine, 900);
        }, true);
      } else if (line.includes("ACCESO PARCIAL")) {
        scrambleWrite(line, 'var(--fg)', () => {
          currentLine++;
          setTimeout(typeLine, 900);
        }, true);
      } else {
        scrambleWrite(line, 'var(--fg)', () => {
          currentLine++;
          setTimeout(typeLine, 250);
        });
      }
    } else {
      stopTypeAudio();
      triggerEpicReveal();
    }
  }

  function triggerEpicReveal() {
    const btn1 = document.getElementById("btn-juego");
    const btn2 = document.getElementById("btn-tuto");
    const btn3 = document.getElementById("btn-logros");
    const btn4 = document.getElementById("btn-equipo");
    btn1.classList.add("show", "explosive");
    btn2.classList.add("show", "explosive");
    btn3.classList.add("show", "explosive");
    btn4.classList.add("show", "explosive");
    setTimeout(() => {
      btn1.classList.remove("explosive");
      btn2.classList.remove("explosive");
      btn3.classList.remove("explosive");
      btn4.classList.remove("explosive");
    }, 700);
    // El fade-in del fondo ahora solo ocurre después de los videos en startVideoSequence
  }

  function entrarJuego() {
    window.location.href = "/Home/Room1";
  }
  function verTutorial() {
    window.location.href = "/Home/Tutorial";
  }
  function verLogros() {
    window.location.href = '/Home/Logros';
  }
  function verEquipo() {
    window.location.href = '/Home/Equipo';
  }
  </script>

</body>
</html>
<!-- 
.==============================================.
|                                              |
|                           .'\                |
|                          //  ;               |
|                         /'   |               |
|        .----..._    _../ |   \               |
|         \'---._ `.-'      `  .'              |
|          `.    '              `.             |
|            :            _,.    '.            |
|            |     ,_    (() '    |            |
|            ;   .'(().  '      _/__..-        |
|            \ _ '       __  _.-'--._          |
|            ,'.'...____'::-'  \     `'        |
|           / |   /         .---.              |
|     .-.  '  '  / ,---.   (     )             |
|    / /       ,' (     )---`-`-`
