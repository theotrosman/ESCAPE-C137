@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>:3</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <style>
        html, body {
            margin: 0;
            padding: 0;
            font-family: monospace;
            background-color: black;
            color: #00ff00;
            overflow: hidden;
            animation: backgroundChaos 1.3s infinite alternate;
        }

        @@keyframes backgroundChaos {
            0%   { background-color: black; }
            25%  { background-color: #111; }
            50%  { background-color: darkred; color: white; }
            75%  { background-color: black; }
            100% { background-color: white; color: red; }
        }

        @@keyframes shake {
            0%, 100% { transform: translate(0); }
            25% { transform: translate(-2px, 2px); }
            50% { transform: translate(2px, -2px); }
            75% { transform: translate(-2px, -2px); }
        }
#consola, #acertijo {
    font-size: 2.4rem !important;
    line-height: 1.45;
    letter-spacing: 0.03em;
    color: #00ff99;
    font-family: 'Fira Mono', monospace, monospace;
    text-shadow: 0 0 8px #13f388, 0 0 2px #fff;
}

.decrypted-char {
    color: #33ff99;
    font-weight: bold;
    filter: blur(0.8px);
    letter-spacing: 1.5px;
    transition: color 0.2s;
}

.scrambled-char {
    color: #f5f7fa;
    font-family: monospace;
    animation: scrambleFlash 0.1s alternate infinite;
}

@@keyframes scrambleFlash {
    0% { color: #7afff6; }
    40% { color: #fff; }
    60% { color: #00fff0; }
    100% { color: #edffb8; }
}

        @@keyframes glitchText {
            0%   { text-shadow: 1px 0 red, -1px 0 blue; }
            50%  { text-shadow: -2px 0 red, 2px 0 blue; }
            100% { text-shadow: 1px 0 red, -1px 0 blue; }
        }

        .glitch {
            animation: glitchText 0.25s infinite, shake 0.4s infinite;
        }

        #consola {
            margin: 40px;
            white-space: pre-wrap;
            font-size: 20px;
            line-height: 1.6;
            animation: shake 0.5s infinite;
        }

        #acertijo {
            display: none;
            margin: 40px;
            font-size: 18px;
        }

        input {
            background: black;
            border: none;
            border-bottom: 2px solid #00ff00;
            color: #00ff00;
            font-family: monospace;
            font-size: 18px;
            width: 300px;
        }

        a {
            color: #00ffff;
        }
    </style>
</head>
<audio id="sfx-console" src="/img/sfxtype.mp3" preload="auto"></audio>

<body>

    <div id="consola" class="glitch"></div>

    <div id="acertijo" class="glitch" style="animation: aparecer 1s ease-in-out forwards; display: none;">
    <style>
        @@keyframes aparecer {
            from { opacity: 0; transform: scale(0.98); }
            to { opacity: 1; transform: scale(1); }
        }

        .consola-linea {
            display: block;
            margin-bottom: 10px;
        }

        .parpadeo {
            animation: blink 1s step-start infinite;
        }

        @@keyframes blink {
            50% { opacity: 0; }
        }

        .alerta {
            background-color: #111;
            padding: 15px;
            border-left: 4px solid red;
            margin-top: 15px;
        }

        .glow-input {
            box-shadow: 0 0 5px #00ff00;
        }
    </style>

    <div class="alerta">
        <span class="consola-linea">> üìÇ Archivo fuente corrompido:</span>
        <span class="consola-linea parpadeo">> üîó Accediendo a repositorio remoto...</span>
        <span class="consola-linea">
            > <a href="https://github.com/theotrosman/BuggyLogic/blob/main/BuggyLogic.cs" target="_blank">
                github.com/theotrosman/BuggyLogic/blob/main/BuggyLogic.cs
            </a>
        </span>
    </div>

    <div style="margin-top: 20px;">
        <span class="consola-linea">> Encontr√° la l√≠nea exacta que contiene el bug l√≥gico.</span>
        <span class="consola-linea">> Ejemplo de respuesta v√°lida: <i>l√≠nea 15</i></span>
        <input type="text" id="respuesta" class="glow-input" placeholder="escrib√≠ ac√° y presion√° Enter" onkeydown="verificar(event)" />
        <p id="feedback"></p>
    </div>
</div>

    <script>
    function scrambledTextEffect(element, text, scrambleChars = ".:|#%$", totalDuration = 4000) {
    return new Promise((resolve) => {
        let current = 0;
        let out = "";
        const n = text.length;
        const interval = Math.floor(totalDuration / n);

        // Reproducir sonido al inicio
        const audio = document.getElementById('sfx-console');
        if (audio) {
            audio.currentTime = 0;
            audio.play();
        }

        function frame() {
            out = "";
            for (let i = 0; i < n; i++) {
                if (text[i] === "\n") {
                    out += "<br>";
                } else if (i <= current && current > 0) {
                    out += `<span class="scrambled-char">${text[i]}</span>`;
                } else {
                    out += `<span class="scrambled-char">${scrambleChars[Math.floor(Math.random() * scrambleChars.length)]}</span>`;
                }
            }
            element.innerHTML = out;
            if (current < n) {
                current++;
                setTimeout(frame, interval);
            } else {
                element.innerHTML = text.replace(/\n/g, "<br>");
                // Detenemos el audio si termin√≥ antes (opcional)
                setTimeout(() => {
                  if (audio && !audio.paused) audio.pause();
                }, 100);
                resolve();
            }
        }
        frame();
    });
}

function decryptedTextEffect(element, text, options = {}) {
    const characters = options.characters || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%^&*()_+';
    const speed = options.speed || 24;
    const scrambleIterations = options.scrambleIterations || 12;
    return new Promise((resolve) => {
        let revealed = [];
        let iterations = [];
        for (let i = 0; i < text.length; i++) {
            revealed[i] = false;
            iterations[i] = 0;
        }
        let done = false;
        function frame() {
            let output = '';
            done = true;
            for (let i = 0; i < text.length; i++) {
                if (text[i] === '\n') {
                    output += '\n';
                    continue;
                }
                if (revealed[i] || text[i] === ' ') {
                    output += text[i];
                } else {
                    done = false;
                    output += `<span class="decrypted-char">${characters[Math.floor(Math.random() * characters.length)]}</span>`;
                    iterations[i]++;
                    if (iterations[i] >= scrambleIterations) revealed[i] = true;
                }
            }
            element.innerHTML = output;
            if (!done) setTimeout(frame, speed);
            else {
                element.innerHTML = text.replace(/\n/g, '<br>');
                resolve();
            }
        }
        frame();
    });
}


        const consola = document.getElementById("consola");
        const acertijo = document.getElementById("acertijo");

        const introTexto = [
            "> ‚ñà‚ñà‚ñà CONEXI√ìN INESTABLE ‚Äî REALIDAD MVC-C137 ‚ñà‚ñà‚ñà",
            "> Rick: M-m-morty... algo no cuadra. Estamos dentro del c√≥digo.",
            "> Rick: No es una simulaci√≥n, es una instancia corrompida del framework.",
            "> [LOG] El repositorio fue manipulado... las funciones mutaron.",
            "> [ERROR] El compilador... me est√° mirando, Morty.",
            "> [RICK] Sub√≠ el escape a GitHub, pero algo... tom√≥ control.",
            "> [TRACE] Funci√≥n BuggyLogic.cs en estado cr√≠tico.",
            "> Ten√©s que rastrear el punto de falla l√≥gica o el ciclo va a reiniciarse.",
            "> El sistema entero se est√° reseteando... una l√≠nea a la vez.",
            "> Morty, esta es tu √∫nica oportunidad para romper el bucle de compilaci√≥n.",
            "> Ayudame a salir, busc√° el fallo... y escribilo ac√° abajo."
        ];

        let i = 0;
function escribirIntro() {
    if (i < introTexto.length) {
        const span = document.createElement("span");
        consola.appendChild(span);

        // üî• Cambi√° por decryptedTextEffect o scrambledTextEffect seg√∫n el mood
        scrambledTextEffect(span, introTexto[i])
            .then(() => {
                span.innerHTML += "<br>";
                i++;
                setTimeout(escribirIntro, 550); // Menor delay por animaci√≥n
            });
    } else {
        setTimeout(() => {
            consola.style.display = "none";
            acertijo.style.display = "block";

            const lineas = acertijo.querySelectorAll('.consola-linea');
            let j = 0;
            function nextLine() {
                if (j < lineas.length) {
                    decryptedTextEffect(lineas[j], lineas[j].innerText)
                        .then(() => { j++; nextLine(); });
                }
            }
            nextLine();
            
        }, 1000);
    }
}

setTimeout(escribirIntro, 1200);

        function verificar(e) {
    if (e.key === "Enter") {
        const raw = document.getElementById("respuesta").value.trim().toLowerCase();
        const r = raw.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
        const feedback = document.getElementById("feedback");

        if (r === "linea 32" || r === "line 32" || r === "32") {
            feedback.innerText = "‚úîÔ∏è Validando...";
            document.body.style.animation = "none";
            document.body.style.backgroundColor = "black";
            document.body.style.color = "lime";

            setTimeout(() => {
                feedback.innerText = "‚ùå ERROR 0xB00B135 ‚Äî L√≥gica de escape no encontrada.";
                document.body.classList.add("glitch");
                setTimeout(() => {
                    feedback.innerText = "üß† Rick: Ehhh... espera... s√≠... s√≠ funcion√≥ Morty...";
                    setTimeout(() => {
                        feedback.innerText = "‚úîÔ∏è ¬°Correcto! Portal dimensional estable...";
                        
                        // Marcar GameStart como completado
                        fetch('/Home/CompleteGameStart', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then(response => response.json())
                          .then(data => {
                            if (data.success) {
                                // Esperar un momento antes de redirigir
                                setTimeout(() => {
                                    window.location.href = "/Home/Room2";
                                }, 2000);
                            }
                        });
                    }, 2500);
                }, 2500);
            }, 2000);
        } else {
            feedback.innerText = "‚ùå Esa no es la l√≠nea... el bug sigue reinfectando.";
        }
    }
}
    </script>
</body>
</html>
