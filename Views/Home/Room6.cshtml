<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Room 6 ‚Äî Caos del N√∫cleo</title>
  <style>
    :root {
      --bg: #000;
      --fg: #00ffcc;
      --alert: #ff0066;
      --glitch1: #ff00c8;
      --glitch2: #00ffff;
    }
    * { box-sizing: border-box; }
    body {
      margin: 0;
      font-family: monospace;
      background: radial-gradient(var(--bg), #111);
      color: var(--fg);
      overflow: hidden;
      height: 100vh;
    }
    canvas, .crazyLight, .flashOverlay {
      position: fixed;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      z-index: -1;
    }
    .introLore {
      position: absolute;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      background: black;
      color: var(--fg);
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      font-size: 18px;
      padding: 30px;
      z-index: 999;
      animation: introFade 10s ease forwards;
    }
    @@keyframes introFade {
      0% { opacity: 1; }
      90% { opacity: 1; }
      100% { opacity: 0; pointer-events: none; }
    }
    .glitch {
      animation: glitchFlash 0.3s infinite alternate;
    }
    @@keyframes glitchFlash {
      from { text-shadow: 2px 0 var(--glitch1), -2px 0 var(--glitch2); }
      to { text-shadow: -2px 0 var(--glitch2), 2px 0 var(--glitch1); }
    }
    .flashOverlay {
      background: rgba(255, 255, 255, 0.1);
      animation: flashRGB 2s infinite;
      pointer-events: none;
    }
    @@keyframes flashRGB {
      0% { background: rgba(255,0,0,0.1); }
      25% { background: rgba(0,255,0,0.1); }
      50% { background: rgba(0,0,255,0.1); }
      75% { background: rgba(255,255,0,0.1); }
      100% { background: rgba(255,0,255,0.1); }
    }
    .instrucciones, .terminal, #score {
      position: relative;
      z-index: 2;
    }
    .instrucciones {
      background: rgba(0, 0, 0, 0.75);
      padding: 20px;
      border: 1px solid var(--fg);
      max-width: 800px;
      margin: 20px auto;
    }
    .terminal {
      background: #000;
      border: 2px dashed var(--fg);
      padding: 20px;
      height: 220px;
      overflow-y: auto;
      margin-top: 20px;
    }
    .grid {
      display: grid;
      grid-template-columns: repeat(5, 80px);
      grid-gap: 10px;
      justify-content: center;
      margin: 30px 0;
    }
    .cell {
      width: 80px;
      height: 80px;
      background: #111;
      border: 1px solid var(--fg);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 20px;
      cursor: pointer;
      transition: 0.2s;
    }
    .cell.activo {
      animation: pulseLight 0.4s alternate infinite;
      background: #ff0066;
      color: white;
    }
    @@keyframes pulseLight {
      0% { box-shadow: 0 0 10px #ff0088, 0 0 30px #ff0088; }
      100% { box-shadow: 0 0 20px #fff, 0 0 40px #00ffff; }
    }
    #score {
      font-size: 18px;
      margin-top: 10px;
      text-align: center;
    }
    @@keyframes portalFlash {
  0% { filter: hue-rotate(0deg) brightness(1); }
  100% { filter: hue-rotate(180deg) brightness(1.4); }
}
  </style>
</head>
<body>
<audio id="bgAudio" src="/audio/rick-dubstep.mp3" autoplay loop></audio>
<div class="flashOverlay"></div>
<canvas id="matrix"></canvas>
<div class="introLore">
  <div class="glitch">>>> Cargando n√∫cleo de la realidad...</div>
  <div class="glitch">>>> M√∫ltiples capas de c√≥digo detectadas...</div>
  <div class="glitch">>>> ERROR EN LA MATRIZ...</div>
  <div class="glitch">>>> RICK: ¬°Morty! Si el n√∫cleo explota nos fragmentamos en l√≠neas de c√≥digo!</div>
  <div class="glitch">>>> Preparate... esto se va al carajo.</div>
</div>
<div class="instrucciones">
  <h2>‚ö†Ô∏è Room 6: Caos del N√∫cleo</h2>
  <p>Rick: Morty, estamos en el n√∫cleo ca√≥tico de la realidad. La f√≠sica no responde. Los bugs est√°n vivos. Y el c√≥digo... se genera solo.</p>
  <p><strong>OBJETIVO:</strong> Ten√©s 60 segundos para hacer clic en los <span style="color:#ff66cc">CUADRADOS ACTIVOS</span> que parpadean al azar. Cada clic correcto suma +1. Cada clic fallado resta -1.</p>
  <p>Logr√° <strong>15 puntos</strong> y Rick desbloquear√° el n√∫cleo para acceder a la siguiente sala.</p>
</div>
<div class="grid" id="grid"></div>
<div id="score">Puntaje: 0</div>
<div class="terminal" id="terminal"></div>
<script>
window.addEventListener('DOMContentLoaded', () => {
  const consoleDiv = document.getElementById('console');
  const intro = [
    "[C137_CONSOLE] *** INICIANDO SECUENCIA DE SIMULACI√ìN BALATRO CODEX ***",
    "[C137_CONSOLE] Injectando caos... Corrupci√≥n del sistema al 67%...",
    "[RICK] Morty... ¬°MORTY! Despert√° de una maldita vez...",
    "[RICK] Estamos atrapados en un c√≥digo convertido en un juego de cartas interdimensional... y para salir tenemos que JUGAR.",
    "[RICK] Necesitamos ganar al menos $2000 para que la realidad vuelva a estabilizarse... O vamos a explotar como una tostadora sobrecargada.",
    "[C137_CONSOLE] M√∫ltiples universos detectados. Condici√≥n: ALTAMENTE INESTABLE.",
    "[PC] Hola Rick. ¬øOtra simulaci√≥n tuya rota? ¬øNo aprendiste nada desde que ejecutaste c√≥digo en COBOL? JAJAJA.",
    "[RICK] No me hag√°s empezar con tu maldito sistema operativo hecho en Basic...",
    "[C137_CONSOLE] ALERTA: Jugador con coeficiente limitado identificado. Activando modo BURLA ASCII.",
    "[PC]  ‚îå( ‡≤†_‡≤†)‚îò  ¬øEso fue un intento de jugada? Qu√© verg√ºenza intergal√°ctica.",
    "[PC]  (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª  ¬°Te voy a reventar con glitches y errores, jugador de pacotilla!",
    "[RICK] Morty, no la cagues. Este juego es m√°s importante de lo que parece. Avanz√° o morimos.",
    "[C137_CONSOLE] Realidad intermedia cargada. Comenzando desaf√≠o balatro. Buena suerte. Vas a necesitar MUCHA."
  ];

  let i = 0;
  const escribirIntro = setInterval(() => {
    if (i < intro.length) {
      consoleDiv.innerHTML += `> ${intro[i]}<br>`;
      consoleDiv.scrollTop = consoleDiv.scrollHeight;
      i++;
    } else {
      clearInterval(escribirIntro);
    }
  }, 1200);
});
const canvas = document.getElementById('matrix');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;
const cols = Math.floor(canvas.width / 20);
const ypos = Array(cols).fill(0);
function matrixRain() {
  ctx.fillStyle = '#0003';
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  ctx.fillStyle = '#0ff';
  ctx.font = '15pt monospace';
  ypos.forEach((y, ind) => {
    const text = String.fromCharCode(Math.random() * 128);
    const x = ind * 20;
    ctx.fillText(text, x, y);
    ypos[ind] = y > 100 + Math.random() * 10000 ? 0 : y + 20;
  });
}
setInterval(matrixRain, 50);

const grid = document.getElementById("grid");
const scoreDisplay = document.getElementById("score");
const terminal = document.getElementById("terminal");
let score = 0, tiempo = 60, intervalo, finalizado = false, celdaActiva = -1;
const frases = [
  "¬°Apunt√° mejor Morty!",
  "¬°Est√°s fallando demasiado!",
  "El n√∫cleo est√° cada vez m√°s inestable...",
  "Esa luz rosa no es decoraci√≥n, Morty, es radiaci√≥n!",
  "¬°20 puntos o morimos bugueados!"
];
function crearCeldas() {
  for (let i = 0; i < 25; i++) {
    const cell = document.createElement("div");
    cell.className = "cell";
    cell.id = `cell${i}`;
    cell.onclick = () => {
      if (finalizado) return;
      if (cell.classList.contains("activo")) {
        score++;
        terminal.innerText += `‚úîÔ∏è Click correcto en ${cell.id}\n`;
      } else {
        score--;
        terminal.innerText += `‚ùå Click fallado en ${cell.id}\n`;
      }
      actualizar();
    };
    grid.appendChild(cell);
  }
}
function activarRandom() {
  document.querySelectorAll('.cell').forEach(c => c.classList.remove('activo'));
  let r;
  do { r = Math.floor(Math.random() * 25); } while (r === celdaActiva);
  celdaActiva = r;
  const nueva = document.getElementById(`cell${r}`);
  nueva.classList.add("activo");
  setTimeout(() => {
    if (nueva.classList.contains("activo")) {
      nueva.classList.remove("activo");
      celdaActiva = -1;
    }
  }, 900); 
}

function actualizar() {
  scoreDisplay.innerText = `Puntaje: ${score}`;
  if (score >= 15 && !finalizado) {
    finalizado = true;
    clearInterval(intervalo);
    document.body.innerHTML = `<div id="finalConsola" style="color: #00ff00; font-family: monospace; padding: 40px; font-size: 16px; white-space: pre-wrap;">
[CONEXI√ìN ESTABLECIDA]
>>> Rick: Morty... est√°s viendo el n√∫cleo de la red de realidades.
>>> Morty: ¬øY qu√© hay en la siguiente habitaci√≥n?
>>> Rick: Algo peor que bugs, Morty... un sistema que piensa por s√≠ mismo.
>>> Morty: ¬øC√≥mo que piensa? ¬øTiene conciencia?
>>> Rick: S√≠, Morty. Se reprograma solo, aprende de nosotros...
>>> Rick: Si no lo controlamos... nos va a compilar a nosotros.
>>> Morty: ¬øY entonces qu√© hacemos?
>>> Rick: Prepararnos. En la siguiente sala... no hay instrucciones.
>>> Rick: Solo decisiones.
[PREPARANDO ROOM 7...]
</div>`;
    setTimeout(() => window.location.href = "/Home/Room7", 9000);
  }
}
function iniciarCaos() {
  crearCeldas();
  intervalo = setInterval(() => {
    activarRandom();
    tiempo--;
    if (tiempo % 10 === 0 && tiempo > 0) {
      terminal.innerText += `\nRick: ${frases[Math.floor(Math.random() * frases.length)]}`;
    }
    if (tiempo <= 0 && !finalizado) {
      clearInterval(intervalo);
      terminal.innerHTML += "\nüí• Fracaso. El n√∫cleo colaps√≥. Reiniciando...";
      document.body.classList.add("glitch");
      setTimeout(() => location.reload(), 5000);
    }
  }, 700);
}
setTimeout(iniciarCaos, 10500);
function locuraVisual() {
  const gridElement = document.querySelector('.grid');
  const scaleX = (Math.random() * 4 + 1).toFixed(2);
  const scaleY = (Math.random() * 2 + 0.3).toFixed(2);
  const rotate = (Math.random() * 30 - 15).toFixed(2);
  const skewX = (Math.random() * 20 - 10).toFixed(2);
  const skewY = (Math.random() * 20 - 10).toFixed(2);

  gridElement.style.transition = 'transform 0.4s ease';
  gridElement.style.transform = `scaleX(${scaleX}) scaleY(${scaleY}) rotate(${rotate}deg) skew(${skewX}deg, ${skewY}deg)`;
  gridElement.classList.add('glitch');
  setTimeout(() => {
    gridElement.style.transform = 'scaleX(1) scaleY(1) rotate(0deg) skew(0deg, 0deg)';
    gridElement.classList.remove('glitch');
  }, 1000);

  const flash = document.createElement('div');
  flash.style.position = 'fixed';
  flash.style.top = '0';
  flash.style.left = '0';
  flash.style.width = '100vw';
  flash.style.height = '100vh';
  flash.style.zIndex = '999';
  flash.style.background = `rgba(${Math.floor(Math.random()*255)},${Math.floor(Math.random()*255)},${Math.floor(Math.random()*255)},0.8)`;
  flash.style.transition = 'opacity 0.2s';
  document.body.appendChild(flash);
  setTimeout(() => {
    flash.style.opacity = '0';
    setTimeout(() => document.body.removeChild(flash), 200);
  }, 100);

  for (let i = 0; i < 3; i++) {
    const clone = gridElement.cloneNode(true);
    clone.style.position = 'fixed';
    clone.style.opacity = '0.1';
    clone.style.pointerEvents = 'none';
    clone.style.zIndex = '100';
    clone.style.top = `${Math.random() * 80}%`;
    clone.style.left = `${Math.random() * 80}%`;
    clone.style.transform = `scale(${Math.random() * 2 + 0.5}) rotate(${Math.random() * 360}deg)`;
    document.body.appendChild(clone);
    setTimeout(() => document.body.removeChild(clone), 800);
  }
}

function glitchRandom() {
  const glitch = document.createElement('div');
  glitch.className = 'glitch';
  glitch.innerText = 'ERROR EN LA MATRIZ - DIMENSI√ìN INVALIDA';
  glitch.style.position = 'fixed';
  glitch.style.top = `${Math.random() * 80 + 10}%`;
  glitch.style.left = `${Math.random() * 80 + 10}%`;
  glitch.style.color = '#ff00c8';
  glitch.style.fontSize = `${Math.floor(Math.random() * 40 + 20)}px`;
  glitch.style.zIndex = '1000';
  glitch.style.animation = 'glitchFlash 0.2s infinite alternate';
  document.body.appendChild(glitch);
  setTimeout(() => document.body.removeChild(glitch), 1000);
}

function invocarPortal() {
  const portal = document.createElement('img');
  portal.src = '/img/anuncio9.gif';
  portal.style.position = 'fixed';
  portal.style.top = `${Math.random() * 70 + 10}%`;
  portal.style.left = `${Math.random() * 70 + 10}%`;
  portal.style.width = '200px';
  portal.style.zIndex = '10000';
  portal.style.opacity = '0.8';
  portal.style.pointerEvents = 'none';
  document.body.appendChild(portal);

  const overlay = document.createElement('div');
  overlay.style.position = 'fixed';
  overlay.style.top = 0;
  overlay.style.left = 0;
  overlay.style.width = '100vw';
  overlay.style.height = '100vh';
  overlay.style.zIndex = '9999';
  overlay.style.background = 'radial-gradient(circle, rgba(255,0,255,0.2), rgba(0,255,255,0.3), rgba(255,255,0,0.2))';
  overlay.style.animation = 'portalFlash 1s infinite alternate';
  document.body.appendChild(overlay);

  setTimeout(() => {
    document.body.removeChild(portal);
    document.body.removeChild(overlay);
  }, 3000);
}

function gridDualidad() {
  const grid = document.querySelectorAll('.cell');
  grid.forEach(cell => {
    const dual = Math.random() > 0.5;
    cell.style.transition = 'all 0.3s ease';
    cell.style.background = dual ? '#ff0033' : '#00ffff';
    cell.style.boxShadow = dual ? '0 0 12px #ff0033' : '0 0 12px #00ffff';
    cell.style.transform = `rotate(${Math.random() * 40 - 20}deg)`;
  });
  setTimeout(() => {
    grid.forEach(cell => {
      cell.style.background = '';
      cell.style.boxShadow = '';
      cell.style.transform = 'rotate(0deg)';
    });
  }, 3000);
}

setInterval(locuraVisual, 5000);
setInterval(() => {
  if (Math.random() < 0.4) glitchRandom();
}, 3000);
setInterval(() => {
  if (Math.random() < 0.25) invocarPortal();
}, 8000);
setInterval(() => {
  if (Math.random() < 0.3) gridDualidad();
}, 7000);
</script>

</body>
</html>